cat <<EOF | kubectl apply -f -

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: istio-system
  labels:
    app: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        version: 1.23.0
      annotations:
        sidecar.istio.io/inject: "false"
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
    spec:
      containers:
        - name: jaeger
          image: "docker.io/jaegertracing/all-in-one:1.23"
          env:
            - name: BADGER_EPHEMERAL
              value: "false"
            - name: SPAN_STORAGE_TYPE
              value: "badger"
            - name: BADGER_DIRECTORY_VALUE
              value: "/badger/data"
            - name: BADGER_DIRECTORY_KEY
              value: "/badger/key"
            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: ":9411"
            - name: MEMORY_MAX_TRACES
              value: "50000"
            - name: QUERY_BASE_PATH
              value: /jaeger
          livenessProbe:
            httpGet:
              path: /
              port: 14269
          readinessProbe:
            httpGet:
              path: /
              port: 14269
          volumeMounts:
            - name: data
              mountPath: /badger
          resources:
            requests:
              cpu: 10m
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-svc
  namespace: istio-system
  labels:
    app: jaeger
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 16686
      name: http-jaeger
      protocol: TCP

    - port: 16685
      targetPort: 16685
      name: grpc-query
      protocol: TCP

  selector:
    app: jaeger
  sessionAffinity: None
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    name: zipkin
  name: jaeger-zipkin-svc
  namespace: istio-system
spec:
  ports:
    - port: 9411
      targetPort: 9411
      name: http-query
      protocol: TCP
  selector:
    app: jaeger
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector-svc
  namespace: istio-system
  labels:
    app: jaeger
spec:
  type: ClusterIP
  ports:
  
  - port: 14268
    targetPort: 14268
    name: jaeger-collector-http
    protocol: TCP

  - port: 14250
    targetPort: 14250
    name: jaeger-collector-grpc
    protocol: TCP 

  - port: 9411
    targetPort: 9411
    name: http-zipkin
    protocol: TCP 

  selector:
    app: jaeger

EOF

cat <<EOF | kubectl apply -f -

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: jaeger-vs
  namespace: istio-system
spec:
  hosts:
  - "webserver.ton.io"
  gateways:
  - jaeger-gateway
  http:
  - route:
    - destination:
        host: jaeger-svc
        port:
          number: 8000
EOF

cat <<EOF | kubectl apply -f -

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: jaeger-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 8000
      name: jaeger-http
      protocol: HTTP
    hosts:
    - "webserver.ton.io"
EOF